#!/bin/bash
#
# Copyright (C) 2018 Marios Tsolekas <marios.tsolekas@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


show_help() {
    cat <<EOH
Usage: downloads_sort [OPTION] [FILE]
Automatically sort out \$HOME/Downloads or any other directory

Available options are
  -h             print this message
  -s             simulate execution and print file types to be moved
  -p             create destination directories if they dont exist
  -n             dont overwrite an existing file
  -c FILE        specify a different configuration file
  -d DIRECTORY   specify a different directory to sort out

The configuration files default location is \$HOME/.config/downloads_sort.conf
EOH
}

SIMULATE=""
MKDIR=""
MV_OPTS=""
ALT_CONF=""
ALT_DIR=""

while getopts hspnc:d: opt; do
    case $opt in
        h)
            show_help >&2
            exit 0
            ;;
        s)
            SIMULATE="Y"
            ;;
        p)
            MKDIR="Y"
            ;;
        n)
            MV_OPTS="-n"
            ;;
        c)
            ALT_CONF="$OPTARG"
            ;;
        d)
            ALT_DIR="$OPTARG"
            ;;
        \?)
            exit 1
            ;;
    esac
done

EXE="$0"

shift "$((OPTIND - 1))"
if [[ -n $1 ]]; then
    echo "$EXE: too many arguments" >&2
    exit 1
fi

if [[ -z $ALT_CONF ]]; then
    conf="$HOME/.config/dsort.conf"
else
    conf="$ALT_CONF"
fi

if [[ ! -f $conf ]]; then
    echo "$EXE: configuration file not found" >&2
    exit 1
fi

conf=$(awk '!/^\s*(#|$)/ {$1=$1; print $0}' "$conf")
if (( $(printf "%s\n" "$conf" | wc -l) % 2 != 0 )); then
    echo "$EXE: configuration file is ill formed" >&2
    exit 1
fi

if [[ -z $ALT_DIR ]]; then
    dir="$HOME/Downloads"
else
    dir="$ALT_DIR"
fi

if [[ ! -d $dir ]]; then
    echo "$EXE: directory to sort not found" >&2
    exit 1
fi

if [[ -n $SIMULATE ]]; then
    echo "Simulating execution..."
fi

shopt -s nullglob
(( total = 0 ))

while read -r line; do
    if (( src_read == 0 )); then
        files=( "$dir/"$line )
        (( count = ${#files[@]} ))
        (( total += count ))

        (( src_read = 1 ))
        continue
    fi

    dst="$HOME/$line"

    if [[ -n $MV_OPTS ]]; then
        for (( i = 0; i < count; ++i )); do
            if [[ -f  $dst/${files[$i]##*/} ]]; then
                (( --total ))
            fi
        done
    fi

    if [[ -z $SIMULATE && $count -gt 0 ]]; then
        if [[ -n $MKDIR ]]; then
            mkdir -p -- "$dst"
        fi

        if [[ -n $MKDIR && ! -d $dst ]]; then
            echo "$EXE: Failed to create directory $dst" >&2
        elif [[ ! -d $dst ]]; then
            echo "$EXE: $dst does not exist" >&2
        else
            mv $MV_OPTS -- "${files[@]}" "$dst"
        fi
    elif [[ $count -gt 0 ]]; then
        printf "%b\n" "Moving $count file(s) to $dst:"
        for file in "${files[@]}"; do
            if [[ -n $MV_OPTS && -f $dst/${file##*/} ]]; then
                echo " SKIPPED $file"
            else
                echo " $file"
            fi
        done
    fi

    (( src_read = 0))
done <<< "$conf"

echo "Moved $total file(s)"
